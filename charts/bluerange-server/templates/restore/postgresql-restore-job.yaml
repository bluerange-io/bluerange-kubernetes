{{- if .Values.bluerangeServer.restore.postgresql.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "bluerangeServer.fullname" . }}-restore-postgresql
  labels:
    {{- include "bluerangeServer.labels" . | nindent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "bluerangeServer.fullname" . }}-restore-postgresql
      labels:
        {{- include "bluerangeServer.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: postgres-restore
          image: "debian"
          command:
            - /bin/bash
            - -c
            - |
              # check for 'prod' in the destination hostname
              if [[ "${DST_HOSTNAME}" == *"prod"* ]]; then
                "Found 'prod' in DST_HOSTNAME - this must not be done!"
                exit 0
              fi
              cd ~
              printf "${SRC_HOSTNAME}:${SRC_PORT}:${SRC_DATABASE}:${SRC_USERNAME}:${SRC_PASSWORD}\n${DST_HOSTNAME}:${DST_PORT}:${DST_DATABASE}:${DST_USERNAME}:${DST_PASSWORD}" > ~/.pgpass
              set -x
              chmod 0600 ~/.pgpass
              apt update
              apt install -y postgresql-client
              pg_dump --host=$SRC_HOSTNAME --port=$SRC_PORT --username=$SRC_USERNAME --no-owner --no-privileges --clean --file=dump.sql -Fc $SRC_DATABASE
              # 'pg_restore --clean' might produce "ignorable error messages" resulting in a bad exit code... that needs to be prevented
              pg_restore --host=$DST_HOSTNAME --port=$DST_PORT --username=$DST_USERNAME --dbname=$DST_DATABASE --no-owner --no-privileges --clean --if-exists dump.sql
          env:
            {{- if and .Values.bluerangeServer.restore.postgresql.source .Values.bluerangeServer.restore.postgresql.destination }}
            {{- range $key, $value := .Values.bluerangeServer.restore.postgresql.source }}
            {{- $envKey := $key | upper | replace "." "_" | replace "-" "_" }}
            - name: SRC_{{ $envKey }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.bluerangeServer.restore.postgresql.destination }}
            {{- $envKey := $key | upper | replace "." "_" | replace "-" "_" }}
            - name: DST_{{ $envKey }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.bluerangeServer.restore.resources | nindent 12 }}
{{- end }}
